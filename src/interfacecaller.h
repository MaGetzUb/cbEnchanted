#ifndef INTERFACECALLER_H
#define INTERFACECALLER_H
class InterfaceSystem;
class CBVariableHolder;
class InterfaceCaller
{
	public:
		InterfaceCaller(CBVariableHolder *s);
		bool init();

		void commandAddText(void);
		void commandBox(void);
		void commandCallDLL(void);
		void commandCameraFollow(void);
		void commandCameraPick(void);
		void commandCenterText(void);
		void commandChDir(void);
		void commandCircle(void);
		void commandClearCollisions(void);
		void commandClearKeys(void);
		void commandClearMouse(void);
		void commandClearObjects(void);
		void commandClearText(void);
		void commandCloneCameraOrientation(void);
		void commandCloneCameraPosition(void);
		void commandCloneObjectOrientation(void);
		void commandCloneObjectPosition(void);
		void commandCloseFile(void);
		void commandCloseInput(void);
		void commandCls(void);
		void commandClsColor(void);
		void commandColor(void);
		void commandCopyBox(void);
		void commandCopyFile(void);
		void commandDecrypt(void);
		void commandDefaultMask(void);
		void commandDefaultVisible(void);
		void commandDeleteFile(void);
		void commandDeleteFont(void);
		void commandDeleteImage(void);
		void commandDeleteMEMBlock(void);
		void commandDeleteObject(void);
		void commandDeleteSound(void);
		void commandDot(void);
		void commandDrawAnimation(void);
		void commandDrawGame(void);
		void commandDrawGhostImage(void);
		void commandDrawImage(void);
		void commandDrawImageBox(void);
		void commandDrawScreen(void);
		void commandDrawToImage(void);
		void commandDrawToScreen(void);
		void commandDrawToWorld(void);
		void commandEditMap(void);
		void commandEllipse(void);
		void commandEncrypt(void);
		void commandEnd(void);
		void commandEndSearch(void);
		void commandErrors(void);
		void commandExecute(void);
		void commandFrameLimit(void);
		void commandGhostObject(void);
		void commandGotoSavedLocation(void);
		void commandHotSpot(void);
		void commandInitObjectList(void);
		void commandInsert(void);
		void commandLine(void);
		void commandLoadProgram(void);
		void commandLocate(void);
		void commandLock(void);
		void commandLoopObject(void);
		void commandMakeDir(void);
		void commandMakeError(void);
		void commandMaskImage(void);
		void commandMaskObject(void);
		void commandMemCopy(void);
		void commandMirrorObject(void);
		void commandMoveCamera(void);
		void commandMoveObject(void);
		void commandObjectFloat(void);
		void commandObjectInteger(void);
		void commandObjectLife(void);
		void commandObjectOrder(void);
		void commandObjectPick(void);
		void commandObjectPickable(void);
		void commandObjectRange(void);
		void commandObjectString(void);
		void commandPaintObject(void);
		void commandParticleAnimation(void);
		void commandParticleEmission(void);
		void commandParticleMovement(void);
		void commandPickColor(void);
		void commandPickImageColor(void);
		void commandPickImageColor2(void);
		void commandPixelPick(void);
		void commandPlayObject(void);
		void commandPlaySound(void);
		void commandPointCamera(void);
		void commandPointObject(void);
		void commandPokeByte(void);
		void commandPokeFloat(void);
		void commandPokeInt(void);
		void commandPokeShort(void);
		void commandPositionCamera(void);
		void commandPositionMouse(void);
		void commandPositionObject(void);
		void commandPrint(void);
		void commandPutPixel(void);
		void commandPutPixel2(void);
		void commandRandomize(void);
		void commandReadByte(void);
		void commandReadFloat(void);
		void commandReadInt(void);
		void commandReadLine(void);
		void commandReadShort(void);
		void commandReadString(void);
		void commandResetObjectCollision(void);
		void commandResizeImage(void);
		void commandResizeMEMBlock(void);
		void commandRotateCamera(void);
		void commandRotateImage(void);
		void commandRotateObject(void);
		void commandSAFEEXIT(void);
		void commandSaveImage(void);
		void commandSaveProgram(void);
		void commandScreen(void);
		void commandScreenGamma(void);
		void commandScreenPositionObject(void);
		void commandScreenShot(void);
		void commandSeekFile(void);
		void commandSetFont(void);
		void commandSetMap(void);
		void commandSetSound(void);
		void commandSetTile(void);
		void commandSetupCollision(void);
		void commandSetWindow(void);
		void commandShowMouse(void);
		void commandShowObject(void);
		void commandSmooth2D(void);
		void commandStartSearch(void);
		void commandStopAnimation(void);
		void commandStopObject(void);
		void commandStopSound(void);
		void commandText(void);
		void commandTranslateCamera(void);
		void commandTranslateObject(void);
		void commandTurnCamera(void);
		void commandTurnObject(void);
		void commandUnlock(void);
		void commandUpdateGame(void);
		void commandVerticalText(void);
		void commandWait(void);
		void commandWaitKey(void);
		void commandWaitMouse(void);
		void commandWrite(void);
		void commandWriteByte(void);
		void commandWriteFloat(void);
		void commandWriteInt(void);
		void commandWriteLine(void);
		void commandWriteShort(void);
		void commandWriteString(void);


		void functionAbs(void);
		void functionACos(void);
		void functionAnimationHeight(void);
		void functionAnimationPlaying(void);
		void functionAnimationWidth(void);
		void functionAsc(void);
		void functionASin(void);
		void functionATan(void);
		void functionBin(void);
		void functionBoxOverlap(void);
		void functionCameraAngle(void);
		void functionCameraX(void);
		void functionCameraY(void);
		void functionChr(void);
		void functionCloneImage(void);
		void functionCloneObject(void);
		void functionCollisionAngle(void);
		void functionCollisionX(void);
		void functionCollisionY(void);
		void functionCommandLine(void);
		void functionCos(void);
		void functionCountCollisions(void);
		void functionCountWords(void);
		void functionCrc32(void);
		void functionCurrentDir(void);
		void functionCurveAngle(void);
		void functionCurveValue(void);
		void functionDate(void);
		void functionDistance(void);
		void functionDistance2(void);
		void functionDownKey(void);
		void functionEOF(void);
		void functionEscapeKey(void);
		void functionFileExists(void);
		void functionFileOffset(void);
		void functionFileSize(void);
		void functionFindFile(void);
		void functionFlip(void);
		void functionFloat(void);
		void functionFPS(void);
		void functionGetAngle(void);
		void functionGetAngle2(void);
		void functionGetCollision(void);
		void functionGetEXEName(void);
		void functionGetKey(void);
		void functionGetMap(void);
		void functionGetMap2(void);
		void functionGetMouse(void);
		void functionGetPixel(void);
		void functionGetPixel2(void);
		void functionGetRGB(void);
		void functionGetWord(void);
		void functionGFXModeExists(void);
		void functionHex(void);
		void functionImage(void);
		void functionImageHeight(void);
		void functionImagesCollide(void);
		void functionImagesOverlap(void);
		void functionImageWidth(void);
		void functionInput(void);
		void functionInStr(void);
		void functionInt(void);
		void functionIsDirectory(void);
		void functionKeyDown(void);
		void functionKeyHit(void);
		void functionKeyUp(void);
		void functionLeft(void);
		void functionLeftKey(void);
		void functionLen(void);
		void functionLoadAnimImage(void);
		void functionLoadAnimObject(void);
		void functionLoadFont(void);
		void functionLoadImage(void);
		void functionLoadMap(void);
		void functionLoadObject(void);
		void functionLoadSound(void);
		void functionLog(void);
		void functionLog10(void);
		void functionLower(void);
		void functionLSet(void);
		void functionMakeEmitter(void);
		void functionMakeImage(void);
		void functionMakeMap(void);
		void functionMakeMEMBlock(void);
		void functionMakeObject(void);
		void functionMakeObjectFloor(void);
		void functionMapHeight(void);
		void functionMapWidth(void);
		void functionMax(void);
		void functionMEMBlockSize(void);
		void functionMid(void);
		void functionMin(void);
		void functionMouseDown(void);
		void functionMouseHit(void);
		void functionMouseMoveX(void);
		void functionMouseMoveY(void);
		void functionMouseMoveZ(void);
		void functionMouseUp(void);
		void functionMouseWX(void);
		void functionMouseWY(void);
		void functionMouseX(void);
		void functionMouseY(void);
		void functionMouseZ(void);
		void functionNextObject(void);
		void functionObjectAngle(void);
		void functionObjectFloat(void);
		void functionObjectFrame(void);
		void functionObjectInteger(void);
		void functionObjectLife(void);
		void functionObjectPlaying(void);
		void functionObjectSight(void);
		void functionObjectSizeX(void);
		void functionObjectSizeY(void);
		void functionObjectsOverlap(void);
		void functionObjectString(void);
		void functionObjectX(void);
		void functionObjectY(void);
		void functionOpenToEdit(void);
		void functionOpenToRead(void);
		void functionOpenToWrite(void);
		void functionPeekByte(void);
		void functionPeekFloat(void);
		void functionPeekInt(void);
		void functionPeekShort(void);
		void functionPickedAngle(void);
		void functionPickedObject(void);
		void functionPickedX(void);
		void functionPickedY(void);
		void functionPlayAnimation(void);
		void functionPlaySound(void);
		void functionRand(void);
		void functionReadByte(void);
		void functionReadFloat(void);
		void functionReadInt(void);
		void functionReadLine(void);
		void functionReadShort(void);
		void functionReadString(void);
		void functionReplace(void);
		void functionRight(void);
		void functionRightKey(void);
		void functionRnd(void);
		void functionRoundDown(void);
		void functionRoundUp(void);
		void functionRSet(void);
		void functionSCREEN(void);
		void functionScreenDepth(void);
		void functionScreenHeight(void);
		void functionScreenWidth(void);
		void functionSin(void);
		void functionSoundPlaying(void);
		void functionSqrt(void);
		void functionStr(void);
		void functionString(void);
		void functionStrInsert(void);
		void functionStrMove(void);
		void functionStrRemove(void);
		void functionTan(void);
		void functionTextHeight(void);
		void functionTextWidth(void);
		void functionTime(void);
		void functionTimer(void);
		void functionTrim(void);
		void functionUpKey(void);
		void functionUpper(void);
		void functionWaitKey(void);
		void functionWaitMouse(void);
		void functionWrapAngle(void);

	private:
		InterfaceSystem *system;
		CBVariableHolder *stack;
};

#endif // INTERFACECALLER_H
