'Täytettyihin kolmiohin ja poimintaan perustuva valoefekti CoolBasicille
'koodaillut cce 13.11.2010

// ----- START cbEnchanted custom functions -----
Include "include\customfunctions.cb"
// ----- END cbEnchanted custom functions -----

Smooth2D ON
Const SCRW = 1280
Const SCRH = 1024
Const SCRW_H = 640 ' Puolet leveydestä
Const SCRH_H = 512 ' Puolet korkeudesta
SCREEN SCRW, SCRH, 0, cbFullscreen

kartta = LoadMap("Media\cdm2.til","Media\tileset.bmp")
PlayObject kartta,0,0,1
ObjectPickable kartta, ON

ukko = LoadObject ("Media\guy.bmp",72)

SetupCollision ukko, kartta, 1, 4, 2

' Tämä poistaa kuvan maskauksen LoadImagen ja MakeImagen yhteydessä.
' Kun kuvaa ei ole maskattu, ei DrawToScreenin kohdalla tarvitse kuvaa
' kopioida videomuistissa, jolloin koodi on paljon nopeampi.
DefaultMask OFF
imgMask = MakeImage(SCRW, SCRH)

'Awesome Commodore-64 stylish font, cbE rocks!
'c64font = LoadFont("Media\C64_User_Mono_v1.0-STYLE.ttf")
'SetFont c64font

lastUpdate = Timer()
Repeat
    multiplier# = Float(Timer() - lastUpdate)/10.0
    lastUpdate = Timer()
    
    'Ukon ohjaus
    If LeftKey() Then TurnObject ukko,3*multiplier
    If RightKey() Then TurnObject ukko,-3*multiplier
    If UpKey() Then MoveObject ukko,1*multiplier
    If DownKey() Then MoveObject ukko,-1*multiplier
    
    UpdateGame
    
    CloneCameraPosition ukko
    
    DrawGame
    
    fov# = 90   ' valaistuksen leveys asteina
    quality# = 360 ' kuinka monta kolmiota piirretään, enempi parempi
    turn# = fov / quality
    old_angle# = ObjectAngle(ukko)
    circle_size = 40 ' ukkoa ympäröivän valoympyrän koko
    
    DrawToImage imgMask
        ' Asetetaan blendausmoodiksi ylikirjoitus
        cbeSetBlendMode(CBE_BLEND_OVERWRITE)
        ' Täytetään maski aluksi ahdistavan värisellä taustalla. 196 on alphan määrä
        cbeColor(32, 0, 16, 196)
        Box -1, -1, SCRW + 2, SCRH + 2, 1
        ' Kirjoitetaan yli täysin läpinäkyvällä värillä
        cbeColor(0, 0, 0, 0)
        
        Circle SCRW_H - circle_size/2, SCRH_H - circle_size/2, circle_size, 1
        
        For i# = -quality/2 To quality/2 ' tässä on cbE:n suhteen tärkeää että i määritellään liukuluvuksi. Muuten tapahtuisi jänniä.
            RotateObject ukko, old_angle + i * turn
            ObjectPick ukko
            cam_x = -CameraX()
            cam_y = CameraY()
            pos_x = cam_x + SCRW_H + PickedX()
            pos_y = cam_y + SCRH_H - PickedY()
            
            If i > -quality / 2 Then
                cbeTriangle(cam_x + SCRW_H + ObjectX(ukko), cam_y + SCRH_H - ObjectY(ukko), pos_x, pos_y, old_pos_x, old_pos_y)
            EndIf
            
            old_pos_x = pos_x ' tallennetaan nykyisen poiminnan tiedot seuraavalle kierrokselle
            old_pos_y = pos_y
        Next i#
        
        RotateObject ukko, old_angle
        
        ' Palautetaan tavallinen blendaustila ja valkoinen väri
        cbeSetBlendMode(CBE_BLEND_RESET)
        cbeColor(255, 255, 255, 255)
    DrawToScreen
    
    DrawImage imgMask, 0, 0
    
    Text 0, 2, "FPS: "+FPS()
    DrawScreen

Forever 